# Dockerfile specifically designed for the raspberry pi 
version: "3"
services:
  # visitor-tracker-ffgr:
  #   build:
  #     context: .
  #     dockerfile: ./app/Dockerfile
  #   volumes:
  #     - /mnt/usb/FFGR/data:/app/data  # Mount local folder to container for data storage
  #     - /mnt/usb/FFGR/logs:/app/logs  # Mount local folder to container for log storage
  #   environment:
  #     # Gym-Tracker setup
  #     - LOCATION_SHORT_TITLE=FFGR

  #     # Database setup
  #     - DB_HOSTNAME=db
  #     # TODO: Think about it should create db base on the gym name
  #     - DB_NAME=fitness-fabrik-griesheim
  #     - DB_USERNAME=admin
  #     - DB_PASSWORD=admin123
  #     - DB_PORT=5432
  #   depends_on:
  #     - db
  #   restart: unless-stopped
  #   command: >
  #     sh -c "python3 ./test_runner.py && python3 ./main.py"  # Run the command to execute the Python script

  visitor-tracker-ffda:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    volumes:
      - /mnt/usb/FFDA/data:/app/data  # Mount local folder to container for data storage
      - /mnt/usb/FFDA/logs:/app/logs  # Mount local folder to container for log storage
    environment:
      # Gym-Tracker setup
      - LOCATION_SHORT_TITLE=FFDA

      # Database setup
      - DB_HOSTNAME=db
      - DB_NAME=fitness-fabrik-darmstadt
      - DB_USERNAME=admin
      - DB_PASSWORD=admin123
      - DB_PORT=5432
    depends_on:
      - db
    restart: unless-stopped
    command: >
      sh -c "python3 ./test_runner.py && python3 ./main.py"  # Run the command to execute the Python script

  db:
    image: postgres:15.3-alpine3.17
    restart: unless-stopped
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=fitness-fabrik-griesheim
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123

      # For the container environment
      - TZ=Europe/Berlin
      - PGTZ=Europe/Berlin
      - LANG=de_DE.UTF-8
      - LANGUAGE=de_DE.UTF-8
      - LC_ALL=de_DE.UTF-8
    volumes:
      - ./postgres/pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432

  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      # Named volume for Grafana data storage
      - ./grafana_data:/var/lib/grafana
